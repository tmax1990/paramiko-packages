1. legg packages, nedlastet fra pypi.org (WHL filer) inn i en mappe. For eks. /home/admthoaxe/pypi_whl

click-8.1.3-py3-none-any.whl
Flask-2.2.2-py3-none-any.whl
gunicorn-20.1.0-py3-none-any.whl
importlib_metadata-6.0.0-py3-none-any.whl
itsdangerous-2.1.2-py3-none-any.whl
Jinja2-3.1.2-py3-none-any.whl
MarkupSafe-2.1.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
Werkzeug-2.2.2-py3-none-any.whl
wheel-0.38.4-py3-none-any.whl
zipp-3.12.1-py3-none-any.whl

2. Lag mappe for webapp:

eks.
mkdir /home/admthoaxe/webapp
chmod 777 /home/admthoaxe/webapp

2. Lag virtuell enviroment i mappen

cd /home/admthoaxe/webapp
python3.9 -m venv web_venv
source web_venv/bin/activate

3. Installer pakkene med pip install fra lokal mappe: 

pip3.9 install ../pypi_whl/*

touch app.py
vim app.py

from flask import Flask

app = Flask(__name__)


@app.route("/")
def hello_world():
    return "<center>Hello World!</center>"


if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0")



python3.9 app.py 
gunicorn --bind 0.0.0.0:5000 wsgi:app

Application1:
touch /etc/systemd/system/py-app.service
vim /etc/systemd/system/py-app.service

[Unit]
Description=Gunicorn instance to serve myproject
After=network.target
[Service]
User=root
Group=root
WorkingDirectory=/home/admthoaxe/webapp
Environment="PATH=/home/admthoaxe/webapp/test_app/bin"
ExecStart=/home/admthoaxe/webapp/test_app/bin/gunicorn wsgi:app
[Install]
WantedBy=multi-user.target


Application2:
touch /etc/systemd/system/py-app2.service
vim /etc/systemd/system/py-app2.service

[Unit]
Description=Gunicorn instance to serve myproject
After=network.target
[Service]
User=root
Group=root
WorkingDirectory=/home/admthoaxe/webapp2
Environment="PATH=/home/admthoaxe/webapp2/web_venv/bin"
ExecStart=/home/admthoaxe/webapp2/web_venv/bin/gunicorn -b 0.0.0.0:8001 wsgi:app
[Install]
WantedBy=multi-user.target

systemctl start py-app2

Editere nginx.conf
vim /etc/nginx/nginx.conf

    server {
        listen       8080;
        server_name  _;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
         proxy_pass http://127.0.0.1:8001;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

        }

Sjekk for syntaksfeil
nginx -t
systemctl restart nginx


python3.9 app.py 
gunicorn --bind 0.0.0.0:5000 wsgi:app
deactivate
cat /etc/systemd/system/py-app.service
systemctl start py-app
systemctl daemon-reload
systemctl start py-app
systemctl status py-app
vim /etc/nginx/nginx.conf
nginx -t
systemctl restart nginx
systemctl status nginx
systemctl status py-app
vim /etc/nginx/nginx.conf
nginx -t
systemctl restart nginx
setsebool -P httpd_can_network_connect 1
systemctl restart nginx

